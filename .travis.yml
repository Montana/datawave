---
dist: trusty
sudo: true

# Setting `language: minimal`, in this case it can be both, (either/or).

language: java
  
# My tips for NSA's Datawave Travis optimization. 
 
# You can add an `if statement` if you need to add Cron jobs to your build, I've added how this would look below.
  
# if: "(commit_message =~ /\\[delete env\\]/ OR commit_message =~ /\\[recreate env\\]/) AND type != cron"

# Restart the `travis-scheduler` for fresh tokens on every build/trigger.  

# If you choose to `stages` in Datawave, I've wrote out some more good tips for the NSA's project Datawave, as it relates to Travis CI and building. 

# - name: Only push to the main NSA Datawave branches entitled 'master & develop`. 
#  if: "((branch IN (master, develop) && type = push) OR branch =~ /.*env.*/ OR commit_message
#   =~ /\\[recreate env\\]/) AND commit_message !~ /\\[delete env\\]/ AND type !=
#   cron AND commit_message !~ /\\[execute .*. test\\]/ AND commit_message !~ /\\[start
#   recreate scheduler\\]/"

# - name: Cron builds for NSA's Datawave master branch.
# if: "((branch IN (master, develop) && type = push) OR branch =~ /.*env.*/ OR commit_message
#  =~ /\\[recreate env\\]/) AND commit_message !~ /\\[delete env\\]/ AND type !=
#  cron AND commit_message !~ /\\[execute .*. test\\]/ AND commit_message !~ /\\[start
#  recreate scheduler\\]/"

# - name: Test NSA's Datawave Travis build with cron jobs. 
# if: "(commit_message =~ /\\[execute test\\]/ OR commit_message =~ /\\[execute .*.
#   test\\]/) AND type != cron"

# (Theoretically you can use Abiarm API for speed).

jdk: oraclejdk8

# Since Gradle 4.10, cache cleaning happens by stopping the running daemon (if any). (Although Maven is used, Gradle is still an option, and to save time I've implemented this in the build instructoins).

before_install:  
- echo 'Searching for the gradle executable and stopping the daemons'
- find $TRAVIS_BUILD_DIR -name gradlew -exec echo Killing Gradle daemons using {} \; -exec "{}" --stop \; -quit
- echo 'Additional cleaning disabled, as it hinders automatic cleaning procedures'
- echo '*.lock files change at every build, generating an unavoidable repack'
- echo 'on the other hand, they are required for Gradle to maintain its cache size under control'

# Remove some cache, modules & modules-2.lock. 

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

# Caching, speeding up the build. 

cache:
  directories:
  - $HOME/.m2

# Remove the -q flag in mvn -q -Pdev, dist install -DskipTests, via I want verbose info and not silencing the fetch data. 

install:
  - travis_wait mvn -Pdev,dist install -DskipTests

# Add `free` and `uname -a` for more info on the provisional setup, may add `uname -r` for just more information on the provisional setup. 

script:
  - uname -a
  - free
  - chmod u+x ./.install-jdk-travis.sh
  - mvn -Dsurefire.forkCount=4 -Pdev verify
